searchState.loadedDescShard("lox_tree_walk_interpreter", 0, "Entry point for the Lox interpreter.\nDefines the ast structure for the Lox language.\nChecks if any errors were reported during execution.\nProvides error reporting functionality for the Lox …\nImplements an interpreter for the Lox language.\nThe main entry point for the Lox interpreter.\nImplements a recursive descent parser for the Lox language.\nProvides functionality for pretty-printing Lox expressions …\nExecutes a string of Lox source code.\nRuns a Lox program from a file.\nStarts an interactive REPL (Read-Eval-Print Loop) for Lox.\nImplements the lexical analyzer (scanner) for the Lox …\nThis module defines the token types and related structures …\nEnumerates the different kinds of expressions in Lox.\nRepresents an expression in the Lox language.\nThe column number where this expression starts in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe specific kind of expression.\nThe line number where this expression appears in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA struct for reporting and tracking errors in the Lox …\nRepresents errors that can occur during parsing.\nReports an error at a specific line and column.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns whether an error has been reported.\nIndicates whether an error has been encountered.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>ErrorReporter</code> instance.\nInternal method to format and print the error message. …\nThe Lox Interpreter\nRepresents a value to clarify difference between literal …\nHandles reporting of runtime errors\nEvaluates an entire expression and returns a Value\nEvaluates a unary expression.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDetermines if a value is true in Lox.\nCreates a new Interpreter instance\nThe parser for Lox expressions.\nHelper method for parsing binary operations.\nCreates an Expression with the current token’s line and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new Parser instance.    \nSynchronizes the parser to a useable state after …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe scanner for Lox source code.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new Scanner instance.    \nScans the input and produces a vector of tokens.\nIdentifier (variable names, function names, etc.)\nA map of Lox keywords to their corresponding <code>TokenType</code>.\nRepresents literal values in the Lox language.\nRepresents operators in the Lox language.\nOperators (arithmetic, comparison, equality)\nRepresents a token in the Lox language.\nRepresents all possible token types in the Lox language.\nChecks if the operator is a binary operator.\nChecks if the operator is a unary operator.\nThe column number where the token starts.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe lexeme (actual text) of the token.\nThe line number where the token appears.\nThe literal value, if any.\nCreates a new Token with given properties.")